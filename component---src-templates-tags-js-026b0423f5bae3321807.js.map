{"version":3,"sources":["webpack:///./src/templates/tags.js"],"names":["Tags","pageContext","data","location","tag","edges","allMarkdownRemark","title","map","node","slug","fields","frontmatter","key","to","pageQuery"],"mappings":"4FAAA,0HA0DeA,UAlDF,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACzBC,EAAQH,EAARG,IACAC,EAAUH,EAAKI,kBAAfD,MAER,OACE,kBAAC,IAAD,CAAQF,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAOH,IAEZ,kBAAC,IAAD,KAAcA,GAEd,4BACGC,EAAMG,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAH,EAAUE,EAAKG,YAAfL,MACR,OACE,wBAAIM,IAAKH,GACP,kBAAC,OAAD,CAAMI,GAAIJ,GAAOH,QAMzB,kBAAC,OAAD,CAAMO,GAAG,SAAT,cA8BC,IAAMC,EAAS","file":"component---src-templates-tags-js-026b0423f5bae3321807.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport { PageHeading } from '../components/styled-components'\n\nconst Tags = ({ pageContext, data, location }) => {\n  const { tag } = pageContext\n  const { edges } = data.allMarkdownRemark\n\n  return (\n    <Layout location={location} title={tag}>\n      <SEO title={tag} />\n\n      <PageHeading>{tag}</PageHeading>\n\n      <ul>\n        {edges.map(({ node }) => {\n          const { slug } = node.fields\n          const { title } = node.frontmatter\n          return (\n            <li key={slug}>\n              <Link to={slug}>{title}</Link>\n            </li>\n          )\n        })}\n      </ul>\n\n      <Link to=\"/tags\">All tags</Link>\n    </Layout>\n  )\n}\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}