{"version":3,"sources":["webpack:///./src/pages/tags.js"],"names":["TagsPage","data","group","allMarkdownRemark","title","site","siteMetadata","location","map","tag","key","fieldValue","to","kebabCase","totalCount","pageQuery"],"mappings":"2FAAA,+IAqDeA,UA5CE,SAAC,GAAD,QACfC,KACuBC,EAFR,EAEbC,kBAAqBD,MAEHE,EAJL,EAGbC,KACEC,aAAgBF,MAGpBG,EAPe,EAOfA,SAPe,OASf,kBAAC,IAAD,CAAQA,SAAUA,EAAUH,MAAOA,GACjC,kBAAC,IAAD,CAAKA,MAAM,aAEX,kBAAC,IAAD,aAEA,4BACGF,EAAMM,KAAI,SAAAC,GAAG,OACZ,wBAAIC,IAAKD,EAAIE,YACX,kBAAC,OAAD,CAAMC,GAAE,SAAWC,IAAUJ,EAAIE,YAAzB,KACLF,EAAIE,WADP,KACqBF,EAAIK,WADzB,YA6BH,IAAMC,EAAS","file":"component---src-pages-tags-js-05cbae3704c9d01e534c.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport kebabCase from 'lodash/kebabCase'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport { PageHeading } from '../components/styled-components'\n\nconst TagsPage = ({\n  data: {\n    allMarkdownRemark: { group },\n    site: {\n      siteMetadata: { title },\n    },\n  },\n  location,\n}) => (\n  <Layout location={location} title={title}>\n    <SEO title=\"All Tags\" />\n\n    <PageHeading>Tags</PageHeading>\n\n    <ul>\n      {group.map(tag => (\n        <li key={tag.fieldValue}>\n          <Link to={`/tags/${kebabCase(tag.fieldValue)}/`}>\n            {tag.fieldValue} ({tag.totalCount})\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </Layout>\n)\n\nTagsPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      group: PropTypes.arrayOf(\n        PropTypes.shape({\n          fieldValue: PropTypes.string.isRequired,\n          totalCount: PropTypes.number.isRequired,\n        }).isRequired\n      ),\n    }),\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n      }),\n    }),\n  }),\n}\n\nexport default TagsPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    allMarkdownRemark(limit: 2000) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n"],"sourceRoot":""}