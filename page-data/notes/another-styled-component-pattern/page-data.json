{"componentChunkName":"component---src-templates-blog-post-js","path":"/notes/another-styled-component-pattern/","result":{"data":{"site":{"siteMetadata":{"title":"Chandler Moisen","author":"Chandler Moisen"}},"markdownRemark":{"id":"6376ce4b-2425-533c-a2f0-3ef6b0f20f19","excerpt":"Today I learned yet another styled-components pattern.styled-components is an approach to writing CSS within JavaScript. It uses tagged template literals toâ€¦","html":"<p>Today I learned yet another styled-components pattern.</p>\n<p><a href=\"https://styled-components.com/\">styled-components</a> is an approach to writing CSS within JavaScript. It uses <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals\">tagged template literals</a> to enable the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">'styled-components'</span>\n\n<span class=\"token keyword\">const</span> Button <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>button<span class=\"token template-string\"><span class=\"token string\">`\n  color: #0974EC;\n\n  &amp;:hover {\n    color: #EC2509;\n  }\n`</span></span></code></pre></div>\n<p>A great feature of styled-components is that you can wrap your application in a global theme provider and each styled component instance has access to:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">'styled-components'</span>\n\n<span class=\"token keyword\">const</span> Button <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>button<span class=\"token template-string\"><span class=\"token string\">`\n  color: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> theme <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">) => theme.color.blue};\n\n  &amp;:hover {\n    color: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> theme <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">) => theme.color.red};\n  }\n`</span></span></code></pre></div>\n<p>While there is a whole debate to be had about the CSS-in-JS approach, I have found working with styled-components to be mostly pleasant save one aspect: having to pollute my components with the interpolated <code class=\"language-text\">${({ theme }) =&gt;</code> in order to access the global theme. I have found that I am often using this interpolation 5+ times for each styled component I build ðŸ˜±.</p>\n<p>That all changed today:</p>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">I&#39;ve found you can further simplify this! This is how I write my styled-components now: <a href=\"https://t.co/LTQJfG96o1\">pic.twitter.com/LTQJfG96o1</a></p>&mdash; Drake @ PDX (@Saeris) <a href=\"https://twitter.com/Saeris/status/1262441528078688256?ref_src=twsrc%5Etfw\">May 18, 2020</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>","frontmatter":{"title":"Another Styled Component Pattern","date":"May 19, 2020","isTIL":true}}},"pageContext":{"slug":"/another-styled-component-pattern/","previous":{"fields":{"slug":"/testing-goals/"},"frontmatter":{"title":"Testing Goals"}},"next":{"fields":{"slug":"/mock-low-assert-high/"},"frontmatter":{"title":"Mock Low, Assert High"}}}}}