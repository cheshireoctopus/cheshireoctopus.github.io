{"componentChunkName":"component---src-templates-blog-post-js","path":"/til/mirage-js/","result":{"data":{"site":{"siteMetadata":{"title":"Chandler Moisen","author":"Chandler Moisen"}},"markdownRemark":{"id":"5d76fb57-09c8-5742-85d4-acbfea9a3795","excerpt":"Today I learned about Mirage.js while building tooling to support acceptance tests for a new client-side application.Getting the acceptance test suite up andâ€¦","html":"<p>Today I learned about <a href=\"https://miragejs.com\">Mirage.js</a> while building tooling to support acceptance tests for a new client-side application.</p>\n<p>Getting the acceptance test suite up and running was not very challenging thanks to <a href=\"https://devexpress.github.io/testcafe/\">TestCafe</a>. What has proven more difficult is how we plan to handle fixture data.</p>\n<p>I was stumped until a few colleagues recommend shimming the API and one suggested I look into Mirage.</p>\n<p>Mirage is an API mocking tool that runs in the browser. It was built with frontend developers in mind and, from first glance, appears to provide a great developer experience.</p>\n<p>It works by intercepting <code class=\"language-text\">XHR</code> and <code class=\"language-text\">fetch</code> requests and letting the developer mock responses. As it mocks the HTTP boundary, the client code does not need to be modified to tell it speak with Mirage versus your actual server.</p>\n<p>Here is a code example lifted from the docs:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// index.js</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom\"</span>\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">\"./app\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Server <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"miragejs\"</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Server</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">routes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>namespace <span class=\"token operator\">=</span> <span class=\"token string\">\"/api\"</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/users\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Luke\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Leah\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Anakin\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Beyond mocking an API, and what really has me interested, is that Mirage also contains a mock database that stores data and can setup relationships between various data models. Again, lifted from the docs:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Server<span class=\"token punctuation\">,</span> Model<span class=\"token punctuation\">,</span> belongsTo <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"miragejs\"</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Server</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  models<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    blogPost<span class=\"token punctuation\">:</span> Model<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      author<span class=\"token punctuation\">:</span> <span class=\"token function\">belongsTo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    author<span class=\"token punctuation\">:</span> Model<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Curious to see where this leads!</p>","frontmatter":{"title":"Mirage.js","date":"May 12, 2020","isTIL":true}}},"pageContext":{"slug":"/mirage-js/","previous":{"fields":{"slug":"/teslers-law/"},"frontmatter":{"title":"Tesler's Law"}},"next":{"fields":{"slug":"/testcafe-request-hooks/"},"frontmatter":{"title":"TestCafe Request Hooks"}}}}}