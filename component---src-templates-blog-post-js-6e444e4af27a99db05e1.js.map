{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["ScrolledHeading","styled","div","render","ScrolledTitle","h4","theme","space","ScrolledHomeLink","Link","BlogHeading","PageHeading","mediaQueries","xl","fontSizes","StyledDate","p","medium","BlogPostTemplate","data","location","pageContext","markdownRemark","excerpt","frontmatter","date","description","isTIL","title","html","siteTitle","site","siteMetadata","previous","next","useState","scrolledHeader","setScrolledHeader","useEffect","scrollEvent","window","addEventListener","scrollY","removeEventListener","to","dangerouslySetInnerHTML","__html","style","marginBottom","rhythm","display","flexWrap","justifyContent","listStyle","padding","fields","slug","rel","pageQuery"],"mappings":"2FAAA,kJASMA,EAAkBC,IAAOC,IAAV,iFAAGD,CAAH,uIAGR,qBAAGE,OAAsB,OAAS,UAIlC,qBAAGA,OAAsB,EAAI,KAMpCC,EAAgBH,IAAOI,GAAV,+EAAGJ,CAAH,8CAGH,qBAAGK,MAAkBC,MAAM,MAGrCC,EAAmBP,YAAOQ,QAAV,kFAAGR,CAAH,8CAKhBS,EAAcT,YAAOU,KAAV,6EAAGV,CAAH,4EAGb,qBAAGK,MAAkBM,aAAaC,MAEpB,qBAAGP,MAAkBC,MAAM,MAC5B,qBAAGD,MAAkBQ,UAAU,OAI1CC,EAAad,IAAOe,EAAV,4EAAGf,CAAH,sHACD,qBAAGK,MAAkBQ,UAAU,MAC9B,qBAAGR,MAAkBC,MAAM,MACxB,qBAAGD,MAAkBC,MAAM,MAG1C,qBAAGD,MAAkBM,aAAaK,UACrB,qBAAGX,MAAkBQ,UAAU,MAC3B,qBAAGR,MAAkBC,MAAM,MAiHjCW,UA7GU,SAAC,GAInB,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,SACAC,EACI,EADJA,YACI,EAUAF,EAAKG,eARPC,EAFE,EAEFA,QAFE,IAGFC,YACEC,EAJA,EAIAA,KACAC,EALA,EAKAA,YACAC,EANA,EAMAA,MACAC,EAPA,EAOAA,MAEFC,EATE,EASFA,KAEIC,EAAYX,EAAKY,KAAKC,aAAaJ,MACjCK,EAAmBZ,EAAnBY,SAAUC,EAASb,EAATa,KAZd,EAawCC,oBAAS,GAA9CC,EAbH,KAamBC,EAbnB,KA2BJ,OAZAC,qBAAU,WACR,IAAMC,EAAcC,OAAOC,iBAAiB,UAAU,WAChDD,OAAOE,QAAU,IACnBL,GAAkB,GAElBA,GAAkB,MAItB,OAAO,kBAAMG,OAAOG,oBAAoB,SAAUJ,MACjD,IAGD,kBAAC,IAAD,CAAQnB,SAAUA,EAAUQ,MAAOE,GACjC,kBAAC,IAAD,CACEF,MAAOA,EACPF,YAAaA,GAAeH,IAG9B,kBAACvB,EAAD,CAAiBG,OAAQiC,GACvB,kBAAC5B,EAAD,CAAkBoC,GAAG,KAArB,KAIA,kBAACxC,EAAD,KAAgBwB,IAGlB,kBAAClB,EAAD,KAAckB,GAEd,kBAACb,EAAD,KACGU,GAGFE,GACC,oCACE,2BACE,0MAOF,8BAIJ,yBAAKkB,wBAAyB,CAAEC,OAAQjB,KAExC,wBACEkB,MAAO,CACLC,aAAcC,YAAO,MAIzB,wBACEF,MAAO,CACLG,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGrB,GACC,kBAAC,OAAD,CACEW,IAAOjB,EAAQ,MAAQ,IAAKM,EAASsB,OAAOC,KAC5CC,IAAI,QAFN,KAIKxB,EAAST,YAAYI,QAK9B,4BACGM,GACC,kBAAC,OAAD,CACEU,IAAOjB,EAAQ,MAAQ,IAAKO,EAAKqB,OAAOC,KACxCC,IAAI,QAEHvB,EAAKV,YAAYI,MAJpB,UAeL,IAAM8B,EAAS","file":"component---src-templates-blog-post-js-6e444e4af27a99db05e1.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Link, graphql } from 'gatsby'\nimport styled from 'styled-components'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport { PageHeading } from '../components/styled-components'\nimport { rhythm } from '../utils/typography'\n\nconst ScrolledHeading = styled.div`\n  background: white;\n  box-shadow: 1px 1px 3px black;\n  display: ${({ render }) => render ? 'flex' : 'none'};\n  left: 0;\n  padding: 16px;\n  position: fixed;\n  opacity: ${({ render }) => render ? 1 : 0};\n  right: 0;\n  top: 0;\n  z-index: 1;\n`\n\nconst ScrolledTitle = styled.h4`\n  font-size: 1em;\n  margin: 0;\n  margin-top: ${({ theme }) => theme.space[1]}px;\n`;\n\nconst ScrolledHomeLink = styled(Link)`\n  background-image: none;\n  margin-right: 16px;\n`;\n\nconst BlogHeading = styled(PageHeading)`\n  text-align: center;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin: 0 -2em;\n    margin-top: ${({ theme }) => theme.space[6]}px;\n    font-size: ${({ theme }) => theme.fontSizes[10]}px;\n  }\n`\n\nconst StyledDate = styled.p`\n  font-size: ${({ theme }) => theme.fontSizes[3]}px;\n  margin-top: ${({ theme }) => theme.space[4]}px;\n  margin-bottom: ${({ theme }) => theme.space[5]}px;\n  text-align: center;\n\n  ${({ theme }) => theme.mediaQueries.medium} {\n    font-size: ${({ theme }) => theme.fontSizes[4]}px;\n    margin-bottom: ${({ theme }) => theme.space[8]}px;\n  }\n`\n\nconst BlogPostTemplate = ({\n  data,\n  location,\n  pageContext,\n}) => {\n  const {\n    excerpt,\n    frontmatter: {\n      date,\n      description,\n      isTIL,\n      title,\n    },\n    html,\n  } = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const { previous, next } = pageContext\n  const [scrolledHeader, setScrolledHeader] = useState(false)\n\n  useEffect(() => {\n    const scrollEvent = window.addEventListener('scroll', () => {\n      if (window.scrollY > 150) {\n        setScrolledHeader(true)\n      } else {\n        setScrolledHeader(false)\n      }\n    })\n\n    return () => window.removeEventListener('scroll', scrollEvent)\n  }, [])\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={title}\n        description={description || excerpt}\n      />\n\n      <ScrolledHeading render={scrolledHeader}>\n        <ScrolledHomeLink to=\"/\">\n          ←\n        </ScrolledHomeLink>\n\n        <ScrolledTitle>{title}</ScrolledTitle>\n      </ScrolledHeading>\n\n      <BlogHeading>{title}</BlogHeading>\n\n      <StyledDate>\n        {date}\n      </StyledDate>\n\n      {isTIL && (\n        <>\n          <p>\n            <i>\n              I set aside 30 minutes at the end of each work day to reflect on\n              something that I learned or found interesting during the day.\n              I am making an attempt to write these down.\n            </i>\n          </p>\n\n          <hr />\n        </>\n      )}\n\n      <div dangerouslySetInnerHTML={{ __html: html }} />\n\n      <hr\n        style={{\n          marginBottom: rhythm(1),\n        }}\n      />\n\n      <ul\n        style={{\n          display: `flex`,\n          flexWrap: `wrap`,\n          justifyContent: `space-between`,\n          listStyle: `none`,\n          padding: 0,\n        }}\n      >\n        <li>\n          {previous && (\n            <Link\n              to={`${isTIL ? 'til' : ''}${previous.fields.slug}`}\n              rel=\"prev\"\n            >\n              ← {previous.frontmatter.title}\n            </Link>\n          )}\n        </li>\n\n        <li>\n          {next && (\n            <Link\n              to={`${isTIL ? 'til' : ''}${next.fields.slug}`}\n              rel=\"next\"\n            >\n              {next.frontmatter.title} →\n            </Link>\n          )}\n        </li>\n      </ul>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        isTIL: is_til\n      }\n    }\n  }\n`\n"],"sourceRoot":""}