{"version":3,"sources":["webpack:///./src/pages/notes.js"],"names":["pageQuery","Notes","data","location","siteTitle","site","siteMetadata","title","allMarkdownRemark","edges","map","post","key","node","fields","slug"],"mappings":"2FAAA,sFA8BaA,EAAS,YA6BPC,UAtDD,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACNC,EAAcF,EAAKG,KAAKC,aAA/BC,MAYR,OACE,kBAAC,IAAD,CAAQJ,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,UAEX,kBAAC,IAAD,KACE,kBAAC,IAAD,cAdUL,EAAKM,kBAAkBC,MAExBC,KAAI,SAAAC,GAAI,OACnB,yBAAKC,IAAKD,EAAKE,KAAKC,OAAOC,MACzB,kBAAC,IAAD,CAAUJ,KAAMA,EAAKE","file":"component---src-pages-notes-js-d2c4a42b5a2cf31e7bf4.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport { Appear, BlogPost, Layout, PageHeading, SEO } from '../components'\n\nconst Notes = ({ data, location }) => {\n  const { title: siteTitle } = data.site.siteMetadata\n\n  const renderPosts = () => {\n    const posts = data.allMarkdownRemark.edges\n\n    return posts.map(post => (\n      <div key={post.node.fields.slug}>\n        <BlogPost post={post.node} />\n      </div>\n    ))\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Notes\" />\n\n      <Appear>\n        <PageHeading>Notes</PageHeading>\n        {renderPosts()}\n      </Appear>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query tilPageQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { is_til: { eq: true } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            isTIL: is_til\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Notes\n"],"sourceRoot":""}