{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","Tags","_ref","pageContext","data","location","tag","_data$allMarkdownRema","allMarkdownRemark","edges","totalCount","tagHeader","a","createElement","title","map","_ref2","node","slug","fields","frontmatter","key","to","propTypes","PropTypes","shape","string","isRequired","number","arrayOf","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","object","func","m","module","exports","require","default","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_ocean_beach__WEBPACK_IMPORTED_MODULE_1__","typography_theme_ocean_beach__WEBPACK_IMPORTED_MODULE_1___default","oceanBeachTheme","overrideThemeStyles","body","fontSize","a.gatsby-resp-image-link","backgroundImage","span.tag","border","borderRadius","color","letterSpacing","marginRight","padding","span.tag a","code.language-text","background","div.gatsby-highlight","marginBottom","div.gatsby-highlight pre.language-text","margin","typography","Typography","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","Layout","renderHeaderContent","_this$props","this","props","react__WEBPACK_IMPORTED_MODULE_2___default","style","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_3__","boxShadow","textDecoration","fontFamily","render","children","marginLeft","maxWidth","Date","getFullYear","href","Component","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"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","file":"component---src-templates-tags-js-25b5c3242a0c9bc5375e.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst Tags = ({ pageContext, data, location }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? '' : 's'\n    } tagged with \"${tag}\"`\n\n  return (\n    <Layout location={location} title={tagHeader}>\n      <SEO title={tagHeader} />\n      <h1>{tagHeader}</h1>\n      <ul>\n        {edges.map(({ node }) => {\n          const { slug } = node.fields\n          const { title } = node.frontmatter\n          return (\n            <li key={slug}>\n              <Link to={slug}>{title}</Link>\n            </li>\n          )\n        })}\n      </ul>\n      <Link to=\"/tags\">All tags</Link>\n    </Layout>\n  )\n}\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography'\nimport oceanBeachTheme from 'typography-theme-ocean-beach'\n\noceanBeachTheme.overrideThemeStyles = () => ({\n  body: {\n    fontSize: '16px',\n  },\n  'a.gatsby-resp-image-link': {\n    backgroundImage: 'none',\n  },\n  'span.tag': {\n    border: '1px solid #950451',\n    borderRadius: '2px',\n    color: '#950451',\n    fontSize: '12px',\n    letterSpacing: '0.5px',\n    marginRight: '8px',\n    padding: '3px 12px',\n  },\n  'span.tag a': {\n    backgroundImage: 'none',\n  },\n  'code.language-text': {\n    background: 'rgba(255, 229, 100, 0.2)',\n  },\n  'div.gatsby-highlight': {\n    marginBottom: '1.58em',\n  },\n  'div.gatsby-highlight pre.language-text': {\n    margin: '0px',\n  }\n})\n\nconst typography = new Typography(oceanBeachTheme)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { rhythm, scale } from \"../utils/typography\"\n\nclass Layout extends React.Component {\n  renderHeaderContent() {\n    const { location, title } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n\n    if (location.pathname === rootPath) {\n      return (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: 'none',\n              textDecoration: 'none',\n              color: 'inherit',\n              backgroundImage: 'none',\n            }}\n            to={'/'}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    }\n\n    return (\n      <h3\n        style={{\n          fontFamily: 'Montserrat, sans-serif',\n          marginTop: 0,\n        }}\n      >\n        <Link\n          style={{\n            boxShadow: 'none',\n            textDecoration: 'none',\n            color: 'inherit',\n            backgroundImage: 'none',\n          }}\n          to={'/'}\n        >\n          Home\n        </Link>\n      </h3>\n    )\n  }\n\n  render() {\n    const { children } = this.props\n\n    return (\n      <div\n        style={{\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          maxWidth: rhythm(26),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{this.renderHeaderContent()}</header>\n        <main>{children}</main>\n        <footer style={{ marginTop: rhythm(1) }}>\n          © {new Date().getFullYear()}, Built with\n          {' '}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}