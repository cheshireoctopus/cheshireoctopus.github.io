#!/usr/bin/env node

const Promise = require('bluebird')
const fs = Promise.promisifyAll(require('fs'))
const path = require('path')
const mkdirp = Promise.promisifyAll(require('mkdirp'))
const pug = require('pug')
const marked = require('marked')

const PATH_TO_ROOT = path.join(__dirname, '..')
const PATH_TO_APP = path.join(PATH_TO_ROOT, 'app')
const PATH_TO_SRC = path.join(PATH_TO_APP, 'src')
const PATH_TO_TEMPLATE = path.join(PATH_TO_ROOT, 'views', 'post.pug')
const postTemplate = pug.compileFile(PATH_TO_TEMPLATE)

const postsCollection = []

fs.readdirAsync(PATH_TO_SRC)
	.then(posts => {
		return Promise.map(posts, post => {
			const srcPostPath = `${PATH_TO_SRC}/${post}`

			return fs.readdirAsync(srcPostPath)
				.then(files => {
					const readJSON = fs.readFileAsync(`${srcPostPath}/data.json`, 'utf8')
					const readMD = fs.readFileAsync(`${srcPostPath}/post.md`, 'utf8')
					const readIMG = fs.readdirAsync(`${srcPostPath}/img`)

					return Promise.join(readJSON, readMD, readIMG, (json, md, imgs) => {
						const data = JSON.parse(json)

						postsCollection.push({
							date: data.date,
							topics: data.topics,
							title: data.title,
							html: marked(md),
						})
					})
				})
		})
	})
	.then(() => {
		fs.writeFileAsync(`${PATH_TO_APP}/posts.json`, JSON.stringify(postsCollection))
			.then(() => console.log(`Congratulations - generated posts.`))
	})
