{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["BlogIndex","renderPosts","this","props","data","allMarkdownRemark","edges","map","_ref","node","slug","fields","_node$frontmatter","frontmatter","title","date","description","tags","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","key","style","marginBottom","rhythm","gatsby__WEBPACK_IMPORTED_MODULE_2__","boxShadow","to","dangerouslySetInnerHTML","__html","excerpt","tag","className","render","_this$props","location","siteTitle","site","siteMetadata","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","React","Component","pageQuery","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","createContext","PropTypes","object","string","isRequired","func","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_ocean_beach__WEBPACK_IMPORTED_MODULE_1__","typography_theme_ocean_beach__WEBPACK_IMPORTED_MODULE_1___default","oceanBeachTheme","overrideThemeStyles","a.gatsby-resp-image-link","backgroundImage","span.tag","border","borderRadius","color","fontSize","letterSpacing","marginRight","padding","typography","Typography","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape","Layout","renderHeaderContent","react__WEBPACK_IMPORTED_MODULE_2___default","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_3__","textDecoration","fontFamily","children","marginLeft","maxWidth","Date","getFullYear","href","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-8f64b4c44b87aac0bb75.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nimport { rhythm } from '../utils/typography'\n\nclass BlogIndex extends React.Component {\n  renderPosts() {\n    const { data } = this.props\n    const posts = data.allMarkdownRemark.edges\n\n    return posts.map(({ node }) => {\n      const { slug } = node.fields\n      const { title, date, description, tags } = node.frontmatter\n\n      return (\n        <div key={slug}>\n          <h3 style={{ marginBottom: rhythm(1 / 4) }}>\n            <Link style={{ boxShadow: 'none' }} to={slug}>\n              {title || slug}\n            </Link>\n          </h3>\n          <small>{date}</small>\n          <p\n            dangerouslySetInnerHTML={{\n              __html: description || node.excerpt,\n            }}\n            style={{ marginBottom: rhythm(0.5) }}\n          />\n          <div>\n            {tags.map(tag => (\n              <span\n                key={tag}\n                className=\"tag\"\n              >\n                {tag}\n              </span>\n            ))}\n          </div>\n        </div>\n      )\n    })\n  }\n\n  render() {\n    const { data, location } = this.props\n    const { title: siteTitle } = data.site.siteMetadata\n\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        {this.renderPosts()}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from \"typography\"\nimport oceanBeachTheme from \"typography-theme-ocean-beach\"\n\noceanBeachTheme.overrideThemeStyles = () => ({\n  \"a.gatsby-resp-image-link\": {\n    backgroundImage: 'none',\n  },\n  \"span.tag\": {\n    border: '1px solid #950451',\n    borderRadius: '2px',\n    color: '#950451',\n    fontSize: '12px',\n    letterSpacing: '0.5px',\n    marginRight: '8px',\n    padding: '3px 12px',\n  },\n})\n\nconst typography = new Typography(oceanBeachTheme)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { rhythm, scale } from \"../utils/typography\"\n\nclass Layout extends React.Component {\n  renderHeaderContent() {\n    const { location, title } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n\n    if (location.pathname === rootPath) {\n      return (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: 'none',\n              textDecoration: 'none',\n              color: 'inherit',\n              backgroundImage: 'none',\n            }}\n            to={'/'}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    }\n\n    return (\n      <h3\n        style={{\n          fontFamily: 'Montserrat, sans-serif',\n          marginTop: 0,\n        }}\n      >\n        <Link\n          style={{\n            boxShadow: 'none',\n            textDecoration: 'none',\n            color: 'inherit',\n            backgroundImage: 'none',\n          }}\n          to={'/'}\n        >\n          {title}\n        </Link>\n      </h3>\n    )\n  }\n\n  render() {\n    const { children } = this.props\n\n    return (\n      <div\n        style={{\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          maxWidth: rhythm(26),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{this.renderHeaderContent()}</header>\n        <main>{children}</main>\n        <footer style={{ marginTop: rhythm(1) }}>\n          © {new Date().getFullYear()}, Built with\n          {' '}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}