{"version":3,"sources":["webpack:///./src/pages/notes.js","webpack:///./src/components/PostTags.js","webpack:///./src/components/BlogPost.js"],"names":["pageQuery","Notes","data","location","siteTitle","site","siteMetadata","title","style","marginBottom","allMarkdownRemark","edges","map","post","key","node","fields","slug","PostTags","tags","sort","tag","className","to","kebabCase","BlogPost","frontmatter","date","description","url","isTIL","rhythm","dangerouslySetInnerHTML","__html","excerpt"],"mappings":"2FAAA,0HA0CaA,EAAS,YA6BPC,UA/DD,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACNC,EAAcF,EAAKG,KAAKC,aAA/BC,MAYR,OACE,kBAAC,IAAD,CAAQJ,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,UAEX,kBAAC,IAAD,cAEA,2BACE,iLAOF,wBAAIC,MAAO,CAAEC,aAAc,KAvBfP,EAAKQ,kBAAkBC,MAExBC,KAAI,SAAAC,GAAI,OACnB,yBAAKC,IAAKD,EAAKE,KAAKC,OAAOC,MACzB,kBAAC,IAAD,CAAUJ,KAAMA,EAAKE,c,4FCGdG,EAfE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAGlB,OAFAA,EAAKC,OAEED,EAAKP,KAAI,SAAAS,GAAG,OACjB,0BACEP,IAAKO,EACLC,UAAU,OAEV,kBAAC,OAAD,CAAMC,GAAE,SAAWC,IAAUH,GAArB,KACLA,Q,YC0BMI,IA/BE,SAAC,GAAc,IAAZZ,EAAW,EAAXA,KACVI,EAASJ,EAAKG,OAAdC,KADqB,EAEqBJ,EAAKa,YAA/CnB,EAFqB,EAErBA,MAAOoB,EAFc,EAEdA,KAAMC,EAFQ,EAERA,YAAaT,EAFL,EAEKA,KAC5BU,EAHuB,EAEWC,MACvB,SAAYb,EAAZ,WAAgCA,EAEjD,OACE,6BACE,wBAAIT,MAAO,CAAEC,aAAcsB,YAAO,OAChC,kBAAC,OAAD,CAAMR,GAAIM,GAAMtB,IAGlB,yBAAKC,MAAO,CAAEC,aAAcsB,YAAO,EAAI,KACrC,2BAAIJ,IAGN,uBACEK,wBAAyB,CACvBC,OAAQL,GAAef,EAAKqB,SAE9B1B,MAAO,CAAEC,aAAcsB,YAAO,OAG/BZ,GAAQ,kBAAC,EAAD,CAAUA,KAAMA","file":"component---src-pages-notes-js-2525f7ac9a8704db0c6e.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport BlogPost from '../components/BlogPost'\nimport { PageHeading } from '../components/styled-components'\n\nconst Notes = ({ data, location }) => {\n  const { title: siteTitle } = data.site.siteMetadata\n\n  const renderPosts = () => {\n    const posts = data.allMarkdownRemark.edges\n\n    return posts.map(post => (\n      <div key={post.node.fields.slug}>\n        <BlogPost post={post.node} />\n      </div>\n    ))\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Notes\" />\n\n      <PageHeading>Notes</PageHeading>\n\n      <p>\n        <i>\n          In a perfect world I set aside 30 minutes at the end of each work day\n          to reflect on something that I learned or found interesting during the\n          day.\n        </i>\n      </p>\n\n      <hr style={{ marginBottom: 0 }} />\n\n      {renderPosts()}\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query tilPageQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { is_til: { eq: true } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            isTIL: is_til\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Notes\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport kebabCase from 'lodash/kebabCase'\n\nconst PostTags = ({ tags }) => {\n  tags.sort()\n\n  return tags.map(tag => (\n    <span\n      key={tag}\n      className=\"tag\"\n    >\n      <Link to={`/tags/${kebabCase(tag)}/`}>\n        {tag}\n      </Link>\n    </span>\n  ))\n}\n\nexport default PostTags\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nimport PostTags from './PostTags'\n\nimport { rhythm } from '../utils/typography'\n\nconst BlogPost = ({ post }) => {\n  const { slug } = post.fields\n  const { title, date, description, tags, isTIL } = post.frontmatter\n  const url = isTIL ? `/notes${slug}` : `/writing${slug}`\n\n  return (\n    <div>\n      <h2 style={{ marginBottom: rhythm(1 / 4) }}>\n        <Link to={url}>{title}</Link>\n      </h2>\n\n      <div style={{ marginBottom: rhythm(1 / 3) }}>\n        <b>{date}</b>\n      </div>\n\n      <p\n        dangerouslySetInnerHTML={{\n          __html: description || post.excerpt,\n        }}\n        style={{ marginBottom: rhythm(0.5) }}\n      />\n\n      {tags && <PostTags tags={tags} />}\n    </div>\n  )\n}\n\nBlogPost.propTypes = {\n  post: PropTypes.object.isRequired,\n}\n\nexport default BlogPost\n"],"sourceRoot":""}