{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["ScrolledHeading","styled","div","render","ScrolledTitle","h4","theme","space","ScrolledHomeLink","Link","BlogPostTemplate","data","location","pageContext","markdownRemark","excerpt","frontmatter","date","description","isTIL","title","html","siteTitle","site","siteMetadata","previous","next","useState","scrolledHeader","setScrolledHeader","useEffect","scrollEvent","window","addEventListener","scrollY","removeEventListener","to","dangerouslySetInnerHTML","__html","style","marginBottom","pageQuery"],"mappings":"4FAAA,8GAcMA,EAAkBC,IAAOC,IAAV,iFAAGD,CAAH,uIAGR,qBAAGE,OAAuB,OAAS,UAInC,qBAAGA,OAAuB,EAAI,KAMrCC,EAAgBH,IAAOI,GAAV,+EAAGJ,CAAH,8CAGH,qBAAGK,MAAkBC,MAAM,MAGrCC,EAAmBP,YAAOQ,QAAV,kFAAGR,CAAH,8CA0DPS,UArDU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAAkB,EAKxDF,EAAKG,eAHPC,EAF0D,EAE1DA,QAF0D,IAG1DC,YAAeC,EAH2C,EAG3CA,KAAMC,EAHqC,EAGrCA,YAAaC,EAHwB,EAGxBA,MAAOC,EAHiB,EAGjBA,MACzCC,EAJ0D,EAI1DA,KAEIC,EAAYX,EAAKY,KAAKC,aAAaJ,MACjCK,EAAmBZ,EAAnBY,SAAUC,EAASb,EAATa,KAP0C,EAQhBC,oBAAS,GAA9CC,EARqD,KAQrCC,EARqC,KAsB5D,OAZAC,qBAAU,WACR,IAAMC,EAAcC,OAAOC,iBAAiB,UAAU,WAChDD,OAAOE,QAAU,IACnBL,GAAkB,GAElBA,GAAkB,MAItB,OAAO,kBAAMG,OAAOG,oBAAoB,SAAUJ,MACjD,IAGD,kBAAC,IAAD,CAAQnB,SAAUA,EAAUQ,MAAOE,GACjC,kBAAC,IAAD,CAAKF,MAAOA,EAAOF,YAAaA,GAAeH,IAE/C,kBAAC,IAAD,KACE,kBAACf,EAAD,CAAiBG,OAAQyB,GACvB,kBAACpB,EAAD,CAAkB4B,GAAG,KAArB,KAEA,kBAAChC,EAAD,KAAgBgB,IAGlB,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAcA,GAEd,kBAAC,IAAD,KAAeH,GAEf,yBAAKoB,wBAAyB,CAAEC,OAAQjB,KAExC,wBAAIkB,MAAO,CAAEC,aAAc,UAE3B,kBAAC,IAAD,CACErB,MAAOA,EACPO,KAAMA,EACND,SAAUA,QAUf,IAAMgB,EAAS","file":"component---src-templates-blog-post-js-6b293b845252755e0dbc.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Link, graphql } from 'gatsby'\nimport styled from 'styled-components'\n\nimport {\n  Appear,\n  BlogPostDate,\n  BlogPostDirectionalNavigation,\n  FullHeightContainer,\n  Layout,\n  PageHeading,\n  SEO,\n} from '../components'\n\nconst ScrolledHeading = styled.div`\n  background: white;\n  box-shadow: 1px 1px 3px black;\n  display: ${({ render }) => (render ? 'flex' : 'none')};\n  left: 0;\n  padding: 16px;\n  position: fixed;\n  opacity: ${({ render }) => (render ? 1 : 0)};\n  right: 0;\n  top: 0;\n  z-index: 1;\n`\n\nconst ScrolledTitle = styled.h4`\n  font-size: 1em;\n  margin: 0;\n  margin-top: ${({ theme }) => theme.space[1]}px;\n`\n\nconst ScrolledHomeLink = styled(Link)`\n  background-image: none;\n  margin-right: 16px;\n`\n\nconst BlogPostTemplate = ({ data, location, pageContext }) => {\n  const {\n    excerpt,\n    frontmatter: { date, description, isTIL, title },\n    html,\n  } = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const { previous, next } = pageContext\n  const [scrolledHeader, setScrolledHeader] = useState(false)\n\n  useEffect(() => {\n    const scrollEvent = window.addEventListener('scroll', () => {\n      if (window.scrollY > 150) {\n        setScrolledHeader(true)\n      } else {\n        setScrolledHeader(false)\n      }\n    })\n\n    return () => window.removeEventListener('scroll', scrollEvent)\n  }, [])\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title={title} description={description || excerpt} />\n\n      <FullHeightContainer>\n        <ScrolledHeading render={scrolledHeader}>\n          <ScrolledHomeLink to=\"/\">‚Üê</ScrolledHomeLink>\n\n          <ScrolledTitle>{title}</ScrolledTitle>\n        </ScrolledHeading>\n\n        <Appear>\n          <PageHeading>{title}</PageHeading>\n\n          <BlogPostDate>{date}</BlogPostDate>\n\n          <div dangerouslySetInnerHTML={{ __html: html }} />\n\n          <hr style={{ marginBottom: '30px' }} />\n\n          <BlogPostDirectionalNavigation\n            isTIL={isTIL}\n            next={next}\n            previous={previous}\n          />\n        </Appear>\n      </FullHeightContainer>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        isTIL: is_til\n      }\n    }\n  }\n`\n"],"sourceRoot":""}